{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nimport noImagePic from '../images/NoImage.png'; //Create state and intilize\n\nconst userState = createSlice({\n  name: 'userState',\n  initialState: {\n    products: [],\n    cart: [],\n    newProduct: {\n      id: 0,\n      name: '',\n      description: '',\n      price: 0,\n      picLocation: noImagePic\n    }\n  },\n  reducers: {\n    loadProducts(state, action) {\n      state.products = action.payload;\n    },\n\n    addToCart(state, action) {\n      state.cart.push(action.payload);\n      sessionStorage.setItem('cartData', JSON.stringify(state.cart));\n    },\n\n    initCart(state, action) {\n      state.cart = action.payload;\n    },\n\n    removeItem(state, action) {\n      state.cart.filter(item => item.id !== action.payload.id);\n    },\n\n    clearCart(state, action) {\n      state.cart = [];\n    },\n\n    newProductLoad(state, action) {\n      state.newProduct.id = action.payload.id;\n      state.newProduct.name = action.payload.name;\n      state.newProduct.description = action.payload.description;\n      state.newProduct.price = action.payload.price;\n    },\n\n    addProductURL(state, action) {\n      state.newProduct.picLocation = action.payload;\n    },\n\n    clearNewProduct(state, action) {\n      state.newProduct = {};\n      state.newProduct.picLocation = noImagePic;\n    }\n\n  }\n}); //Create the store\n\nexport const userStore = configureStore({\n  reducer: {\n    userState: userState.reducer\n  }\n}); //export actions\n\nexport const {\n  loadProducts,\n  addToCart,\n  removeItem,\n  clearCart,\n  newProductLoad,\n  addProductURL,\n  clearNewProduct,\n  initCart\n} = userState.actions;","map":{"version":3,"names":["configureStore","createSlice","noImagePic","userState","name","initialState","products","cart","newProduct","id","description","price","picLocation","reducers","loadProducts","state","action","payload","addToCart","push","sessionStorage","setItem","JSON","stringify","initCart","removeItem","filter","item","clearCart","newProductLoad","addProductURL","clearNewProduct","userStore","reducer","actions"],"sources":["G:/GitRepos/ecommerce_app/client/src/api/state.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit'\r\nimport noImagePic from '../images/NoImage.png'\r\n\r\n\r\n//Create state and intilize\r\nconst userState = createSlice({\r\n  name: 'userState',\r\n  initialState: {\r\n    products: [],\r\n    cart: [],\r\n    newProduct: {\r\n      id: 0,\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n      picLocation: noImagePic,\r\n    },\r\n  },\r\n  reducers: {\r\n    loadProducts(state, action) {\r\n      state.products = action.payload\r\n    },\r\n    addToCart(state, action) {\r\n      state.cart.push(action.payload)\r\n      sessionStorage.setItem('cartData', JSON.stringify(state.cart))\r\n    },\r\n    initCart(state, action) {\r\n      state.cart = action.payload\r\n    },\r\n    removeItem(state, action) {\r\n      state.cart.filter((item) => item.id !== action.payload.id)\r\n    },\r\n    clearCart(state, action) {\r\n      state.cart = []\r\n    },\r\n    newProductLoad(state, action) {\r\n      state.newProduct.id = action.payload.id\r\n      state.newProduct.name = action.payload.name\r\n      state.newProduct.description = action.payload.description\r\n      state.newProduct.price = action.payload.price\r\n    },\r\n    addProductURL(state, action) {\r\n      state.newProduct.picLocation = action.payload\r\n    },\r\n    clearNewProduct(state, action) {\r\n      state.newProduct = {}\r\n      state.newProduct.picLocation = noImagePic\r\n    }\r\n  },\r\n})\r\n\r\n//Create the store\r\nexport const userStore = configureStore({\r\n  reducer: {\r\n    userState: userState.reducer,\r\n  },\r\n})\r\n\r\n//export actions\r\nexport const {\r\n  loadProducts,\r\n  addToCart,\r\n  removeItem,\r\n  clearCart,\r\n  newProductLoad,\r\n  addProductURL,\r\n  clearNewProduct,\r\n  initCart\r\n} = userState.actions\r\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AACA,OAAOC,UAAP,MAAuB,uBAAvB,C,CAGA;;AACA,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,WADsB;EAE5BC,YAAY,EAAE;IACZC,QAAQ,EAAE,EADE;IAEZC,IAAI,EAAE,EAFM;IAGZC,UAAU,EAAE;MACVC,EAAE,EAAE,CADM;MAEVL,IAAI,EAAE,EAFI;MAGVM,WAAW,EAAE,EAHH;MAIVC,KAAK,EAAE,CAJG;MAKVC,WAAW,EAAEV;IALH;EAHA,CAFc;EAa5BW,QAAQ,EAAE;IACRC,YAAY,CAACC,KAAD,EAAQC,MAAR,EAAgB;MAC1BD,KAAK,CAACT,QAAN,GAAiBU,MAAM,CAACC,OAAxB;IACD,CAHO;;IAIRC,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;MACvBD,KAAK,CAACR,IAAN,CAAWY,IAAX,CAAgBH,MAAM,CAACC,OAAvB;MACAG,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCC,IAAI,CAACC,SAAL,CAAeR,KAAK,CAACR,IAArB,CAAnC;IACD,CAPO;;IAQRiB,QAAQ,CAACT,KAAD,EAAQC,MAAR,EAAgB;MACtBD,KAAK,CAACR,IAAN,GAAaS,MAAM,CAACC,OAApB;IACD,CAVO;;IAWRQ,UAAU,CAACV,KAAD,EAAQC,MAAR,EAAgB;MACxBD,KAAK,CAACR,IAAN,CAAWmB,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAAClB,EAAL,KAAYO,MAAM,CAACC,OAAP,CAAeR,EAAvD;IACD,CAbO;;IAcRmB,SAAS,CAACb,KAAD,EAAQC,MAAR,EAAgB;MACvBD,KAAK,CAACR,IAAN,GAAa,EAAb;IACD,CAhBO;;IAiBRsB,cAAc,CAACd,KAAD,EAAQC,MAAR,EAAgB;MAC5BD,KAAK,CAACP,UAAN,CAAiBC,EAAjB,GAAsBO,MAAM,CAACC,OAAP,CAAeR,EAArC;MACAM,KAAK,CAACP,UAAN,CAAiBJ,IAAjB,GAAwBY,MAAM,CAACC,OAAP,CAAeb,IAAvC;MACAW,KAAK,CAACP,UAAN,CAAiBE,WAAjB,GAA+BM,MAAM,CAACC,OAAP,CAAeP,WAA9C;MACAK,KAAK,CAACP,UAAN,CAAiBG,KAAjB,GAAyBK,MAAM,CAACC,OAAP,CAAeN,KAAxC;IACD,CAtBO;;IAuBRmB,aAAa,CAACf,KAAD,EAAQC,MAAR,EAAgB;MAC3BD,KAAK,CAACP,UAAN,CAAiBI,WAAjB,GAA+BI,MAAM,CAACC,OAAtC;IACD,CAzBO;;IA0BRc,eAAe,CAAChB,KAAD,EAAQC,MAAR,EAAgB;MAC7BD,KAAK,CAACP,UAAN,GAAmB,EAAnB;MACAO,KAAK,CAACP,UAAN,CAAiBI,WAAjB,GAA+BV,UAA/B;IACD;;EA7BO;AAbkB,CAAD,CAA7B,C,CA8CA;;AACA,OAAO,MAAM8B,SAAS,GAAGhC,cAAc,CAAC;EACtCiC,OAAO,EAAE;IACP9B,SAAS,EAAEA,SAAS,CAAC8B;EADd;AAD6B,CAAD,CAAhC,C,CAMP;;AACA,OAAO,MAAM;EACXnB,YADW;EAEXI,SAFW;EAGXO,UAHW;EAIXG,SAJW;EAKXC,cALW;EAMXC,aANW;EAOXC,eAPW;EAQXP;AARW,IASTrB,SAAS,CAAC+B,OATP"},"metadata":{},"sourceType":"module"}